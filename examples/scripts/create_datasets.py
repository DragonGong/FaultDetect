# the following is the code generated by chat-gpt
import cv2
import os
import time
import re
import shutil


def get_next_file_index(folder_path):
    pattern = re.compile(r"(\d+)\.png$")
    max_index = -1

    for filename in os.listdir(folder_path):
        match = pattern.search(filename)
        if match:
            index = int(match.group(1))
            if index > max_index:
                max_index = index

    return max_index + 1


def capture_images(folder_path):
    os.makedirs(folder_path, exist_ok=True)

    start_index = get_next_file_index(folder_path)
    print(f"Starting from index {start_index:09d}")

    cap = cv2.VideoCapture(0)
    if not cap.isOpened():
        print("无法打开摄像头")
        return

    try:
        while True:
            ret, frame = cap.read()
            if not ret:
                print("无法读取摄像头画面")
                break

            filename = f"{start_index:09d}.png"
            filepath = os.path.join(folder_path, filename)
            cv2.imwrite(filepath, frame)
            print(f"已保存：{filepath}")

            start_index += 1
            time.sleep(1)

    except KeyboardInterrupt:
        print("已停止拍摄。")

    finally:
        cap.release()
        cv2.destroyAllWindows()


def get_sorted_image_files(folder_path):
    """返回按文件编号从小到大排序的文件列表"""
    pattern = re.compile(r"(\d+)\.png$")
    files = []
    for filename in os.listdir(folder_path):
        match = pattern.search(filename)
        if match:
            index = int(match.group(1))
            files.append((index, filename))
    files.sort()
    return [filename for index, filename in files]


def copy_images_interval(src_folder, dest_folder, start_index=0):
    os.makedirs(dest_folder, exist_ok=True)

    dest_index = get_next_file_index(dest_folder)
    print(f"目标文件夹从 {dest_index:09d}.png 开始写入")

    # 已经是 (index, filename) 排序好的列表
    all_files = []
    pattern = re.compile(r"(\d+)\.png$")
    for filename in os.listdir(src_folder):
        match = pattern.search(filename)
        if match:
            index = int(match.group(1))
            all_files.append((index, filename))
    all_files.sort()

    # 过滤 start_index 之后的文件
    valid_files = [(idx, fname) for idx, fname in all_files if idx >= start_index]
    print(f"从索引 {start_index} 开始拷贝 {len(valid_files)} 个文件")

    try:
        for idx, filename in valid_files:
            src_path = os.path.join(src_folder, filename)
            dest_filename = f"{dest_index:09d}.png"
            dest_path = os.path.join(dest_folder, dest_filename)
            shutil.copy2(src_path, dest_path)
            print(f"复制 {src_path} 到 {dest_path}")
            dest_index += 1
            time.sleep(1)
    except KeyboardInterrupt:
        print("已中断拷贝操作。")


if __name__ == "__main__":
    save_folder = '/Volumes/My Passport/dataset/kitti/data2/test'
    capture_images(save_folder)

    # src_folder = '/Volumes/My Passport/dataset/kitti/data1/test'  # 源文件夹路径
    # dest_folder = '/Volumes/My Passport/dataset/kitti/data2/test'  # 目标文件夹路径
    # start_index = 0  # 从源文件夹中的哪个编号开始
    # copy_images_interval(src_folder, dest_folder, start_index)
